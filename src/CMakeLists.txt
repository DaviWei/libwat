#Make files thwat generates build files for libwat
#
# David Yat Sin <dyatsin@sangoma.com>

CMAKE_MINIMUM_REQUIRED(VERSION 2.6)
PROJECT(wat)

IF(NOT DEFINED wat_VERSION_LT_CURRENT)
SET(wat_VERSION_LT_CURRENT 0)
ENDIF(NOT DEFINED wat_VERSION_LT_CURRENT)

IF(NOT DEFINED wat_VERSION_LT_REVISION)
        SET(wat_VERSION_LT_REVISION 0)
ENDIF(NOT DEFINED wat_VERSION_LT_REVISION)

IF(NOT DEFINED wat_VERSION_LT_AGE)
        SET(wat_VERSION_LT_AGE 0)
ENDIF(NOT DEFINED wat_VERSION_LT_AGE)


CONFIGURE_FILE( "${PROJECT_SOURCE_DIR}/wat_config.h.in"
                "${PROJECT_BINARY_DIR}/wat_config.h")

INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/include")
INCLUDE_DIRECTORIES("${PROJECT_SOURCE_DIR}/include/private")
INCLUDE_DIRECTORIES("${PROJECT_BINARY_DIR}")

SET(wat_SOURCES
		wat.c
		wat_core.c
		wat_call.c
		wat_sms.c
		wat_event.c
		wat_cmd.c
		wat_queue.c
		wat_mutex.c
		wat_sched.c
		wat_buffer.c
		telit.c
		pduconv.c)

SET(wat_PUBLIC_HEADERS
		wat_declare.h
		libwat.h)

ADD_LIBRARY(${PROJECT_NAME} SHARED ${wat_SOURCES})
ADD_DEFINITIONS(-ggdb3 -O0 -Wall -Wshadow -Wcast-qual -Wcast-align -Wchar-subscripts -Wmissing-prototypes -Wmissing-declarations)

SET_TARGET_PROPERTIES(${PROJECT_NAME} PROPERTIES SOVERSION ${wat_VERSION_LT_CURRENT}.${wat_VERSION_LT_REVISION}.${wat_VERSION_LT_AGE})

#Install options
IF(NOT DEFINED DESTDIR)
	SET(DESTDIR "/usr")
ENDIF(NOT DEFINED DESTDIR)

SET(LIBHEADERINSTALLDIR ${DESTDIR}/include)

STRING(REGEX MATCHALL "x86_64" IS_64_BIT "${CMAKE_SYSTEM_PROCESSOR}")
IF(IS_64_BIT)
	SET(LIBDIR /lib64)
ELSE(IS_64_BIT)
	SET(LIBDIR /lib)
ENDIF(IS_64_BIT)

SET(LIBBININSTALLDIR ${DESTDIR}${LIBDIR})

FIND_LIBRARY(M_LIB NAMES m ${DESTDIR}${LIBDIR})
TARGET_LINK_LIBRARIES(${PROJECT_NAME} ${M_LIB})	

INSTALL(TARGETS ${PROJECT_NAME} DESTINATION ${LIBBININSTALLDIR} LIBRARY)

FOREACH(wat_PUBLIC_HEADER ${wat_PUBLIC_HEADERS})
        INSTALL(FILES include/${wat_PUBLIC_HEADER} DESTINATION ${LIBHEADERINSTALLDIR})
ENDFOREACH()